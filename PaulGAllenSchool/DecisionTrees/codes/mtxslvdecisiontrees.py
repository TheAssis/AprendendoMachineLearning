# -*- coding: utf-8 -*-
"""MtxslvDecisionTrees.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hY6iUZ4UXQ0qdIRdVs7GIAlurjGgvSG_
"""

# Commented out IPython magic to ensure Python compatibility.
#this is for the purpose of getting MtxslvNode file

!git clone https://github.com/mtxslv/StudyingMachineLearning.git
# % cd StudyingMachineLearning/PaulGAllenSchool/DecisionTrees/codes

import numpy as np
import mtxslvnode # class is imported by file name (without .py extention)

class MtxslvDecisionTrees:
  # while using the class, be sure MtxslvNode file is in the folder
  """
  Attributes:
    root: node at the root
    node_quantity: how many nodes there exists
    how_many_classes: how many classes there exists
  """

  def __init__(self):
    self.root = None
    self.node_quantity = 0
    self.how_many_classes = 0
    
  def fit(self, features, labels, threshold): #method for creating the tree itself
    features_np = np.array(features)
    labels_np = np.array(labels)
    
    self.how_many_classes = len(set(labels_np[:,0]))

    if(self.how_many_classes == 1):
      self.root = MtxslvNode() # object is instantiated by class name
      self.root.turn_node_to_leaf(-1,-1,labels_np[0,0])
    else:
      print("blahblahblah")

  
#  def evaluate(): method for using the tree

url_dataset = "https://raw.githubusercontent.com/mtxslv/StudyingMachineLearning/master/PaulGAllenSchool/DecisionTrees/hw1-data/features.txt"
url_labels = "https://raw.githubusercontent.com/mtxslv/StudyingMachineLearning/master/PaulGAllenSchool/DecisionTrees/hw1-data/labels.txt"

import pandas as pd

df_features = pd.read_csv(url_dataset,names=["x-box","y-box", "width","high","onpix","x-bar","y-bar", "x2bar","y2bar","xybar", "x2ybr","xy2br","x-ege","xegvy","y-ege","yegvx"], sep= ' ')
df_labels = pd.read_csv(url_labels,names=["labels"])

lbls = df_labels.to_numpy()
ftrs = df_features.to_numpy()

arvore = MtxslvDecisionTrees()

arvore.fit(ftrs, lbls,0.05)